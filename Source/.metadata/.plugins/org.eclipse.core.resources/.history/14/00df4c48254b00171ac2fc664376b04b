package com.fhr.ranblog.repositorys.impl;

import java.sql.Timestamp;
import java.util.List;
import org.hibernate.LockMode;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.ApplicationContext;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

import com.fhr.ranblog.models.Script;
import com.fhr.ranblog.repositorys.HibernateBaseDao;

/**
 * A data access object (DAO) providing persistence and search support for
 * Script entities. Transaction control of the save(), update() and delete()
 * operations can directly support Spring container-managed transactions or they
 * can be augmented to handle user-managed Spring transactions. Each of these
 * methods provides additional information for how to configure it for the
 * desired type of transaction control.
 * 
 * @see com.fhr.ranblog.models.Script
 * @author MyEclipse Persistence Tools
 */
public class ScriptDAO extends HibernateBaseDao<Script> {
	// property constants
	public static final String LANGUAGE_TYPE_ID = "languageTypeId";
	public static final String SCRIPT_NAME = "scriptName";
	public static final String SCRIPT_CONTENT = "scriptContent";

	public List<Script> findByLanguageTypeId(Object languageTypeId) {
		return findByProperty(LANGUAGE_TYPE_ID, languageTypeId);
	}

	public List<Script> findByScriptName(Object scriptName) {
		return findByProperty(SCRIPT_NAME, scriptName);
	}

	public List<Script> findByScriptContent(Object scriptContent) {
		return findByProperty(SCRIPT_CONTENT, scriptContent);
	}
}