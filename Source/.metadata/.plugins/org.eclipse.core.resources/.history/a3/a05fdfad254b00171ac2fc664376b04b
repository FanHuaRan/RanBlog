package com.fhr.ranblog.repositorys.impl;

import java.util.List;

import org.hibernate.LockMode;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.ApplicationContext;

import com.fhr.ranblog.models.BlogComment;
import com.fhr.ranblog.repositorys.HibernateBaseDAO;

/**
 * A data access object (DAO) providing persistence and search support for
 * Blogcomment entities. Transaction control of the save(), update() and
 * delete() operations can directly support Spring container-managed
 * transactions or they can be augmented to handle user-managed Spring
 * transactions. Each of these methods provides additional information for how
 * to configure it for the desired type of transaction control.
 * 
 * @see com.fhr.ranblog.models.Blogcomment
 * @author MyEclipse Persistence Tools
 */
public class BlogCommentDAO extends HibernateBaseDAO<BlogComment> {
	// property constants
	public static final String BLOG_USER_ID = "blogUserId";
	public static final String BLOG_ID = "blogId";
	public static final String BLOG_COMMENT = "blogComment";

	public List findByBlogUserId(Object blogUserId) {
		return findByProperty(BLOG_USER_ID, blogUserId);
	}

	public List findByBlogId(Object blogId) {
		return findByProperty(BLOG_ID, blogId);
	}

	public List findByBlogComment(Object blogComment) {
		return findByProperty(BLOG_COMMENT, blogComment);
	}
}